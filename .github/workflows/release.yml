name: Release SmartDNS

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'new release tag(e.g. 38)'
        required: true

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  static-build:
    continue-on-error: true
    strategy:
      matrix:
        toolchain:
          - aarch64-linux-musl
          - arm-linux-musleabi
          - i686-linux-musl
          - mips-linux-musl
          - mipsel-linux-musl
          - x86_64-linux-musl

    runs-on: ubuntu-latest
    container: muslcc/x86_64:${{ matrix.toolchain }}

    steps:
      - name: Install build tools
        run: apk add --no-cache git make tar curl

      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build openssl
        run: |
          export OPENSSL_VER=3.0.12
          export OPENSSL_OPTIONS="no-tests no-ssl3 no-weak-ssl-ciphers no-shared no-idea -DOPENSSL_NO_SECURE_MEMORY"
          mkdir -p /build/openssl
          cd /build/openssl
          curl -sSL https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz | tar --strip-components=1 -zxv
          ./config --prefix=/opt/build $OPENSSL_OPTIONS
          make all -j8
          make install_sw

      - name: Build
        run: |
          cc -v
          export EXTRA_CFLAGS="-I /opt/build/include"
          export LDFLAGS="-L /opt/build/lib -L /opt/build/lib64"
          make STATIC=true

      - name: Set up directories
        run: |
          mkdir .artifacts
          mkdir .package

      - name: Create binary atrifacts
        run: |
          TOOLCHAIN=${{ matrix.toolchain }}
          GIT_HASH=$(git rev-parse --short "${{ github.sha }}")
          FILENAME=btop-${TOOLCHAIN/linux-musl/}-$GIT_HASH
          cp bin/btop .artifacts/$FILENAME

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: btop-${{ matrix.toolchain }}
          path: '.artifacts/**'
